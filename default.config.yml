---

compose_project_name: my-project
docker_runtime_dir: "runtime-{{compose_project_name}}"

user_uid: 1000
user_gid: 1000

# Absolute Path to Drupal dir (`vendor` forlder should be there).
drupal_root_dir: /var/data/drupal
# Name of "web" folder inside `drupal_root_dir`.
drupal_web_root: web
# Absolute Path to Drupal files dir.
drupal_public_files_dir: "{{drupal_root_dir}}/{{drupal_web_root}}/sites/default/files"
drupal_private_files_dir: "{{drupal_public_files_dir}}/private"
drupal_hash_salt: demo_site
# Absolute Path to Drupal config sync dir.
drupal_config_sync_folder: sites/default/sync

expose_http_port:
expose_https_port:
ssl_enabled: false
ssl_cert_path: /var/data/ssl/fullchain.pem
ssl_key_path: /var/data/ssl/privkey.pem

# Look at available options here: https://hub.docker.com/r/jetdevteam/drupal-dockerizer/tags?page=1&ordering=last_updated
php_image: jetdevteam/drupal-dockerizer:php7.4-apache--v2
php_memory_limit: 512M

docker_network_gateway_ip:
domain_name: drupal.devel

# Install node with npm to webserver container.
# See https://github.com/nodesource/distributions#installation-instructions for available version.
node_install: false
node_version: 14

# Enviroment variable for php xdebug extensions
xdebug_install: false
# Availible versions https://pecl.php.net/package/xdebug
xdebug_version: 2.9.6
xdebug_enviroment: >
  remote_enable=1
  remote_connect_back=0
  remote_port=9008
  remote_host={{ docker_network_gateway_ip }}
  show_error_trace=0
  show_local_vars=1
  remote_autostart=1
  show_exception_trace=0
  idekey=VSCODE

drush_install: true
# Availible options: 8, 9, 10
drush_version: 8

# Drush commands to run (will be run by `run-drush-commands.yml` playbook or if init_project is true).
drush_commands:
  - 'cc drush'
  - 'si --account-pass=admin --site-name="Drupal Dockerizer"'
  - 'cron'

# If set to true lanch drush commands in php-apache conteiner after up conteiner.
run_drush_commands: false

solr: false
# Look at available version here https://hub.docker.com/_/solr
solr_version: 4
solr_configs_path: "{{ drupal_root_dir }}/docroot/modules/contrib/search_api_solr/solr-conf/4.x/"
solr_core_name: drupal

# Tom make `memcache` working `memcache` module should be enabled: `en memcache`.
memcache: false

# Path to Drupal DB dump (will be imported by `db.yml` playbook).
db_dump_path: "{{drupal_root_dir}}/dump.sql"

# Availible options: mysql, mariadb
database: mysql
mysql_root_password: root
mysql_user: docker
mysql_password: docker
mysql_database: docker
mysql_volume_archive: "{{drupal_root_dir}}/mysql_volume.tar.gz"
# If set to true import database after up conteiners.
import_database: false

install_adminer: false
adminer_port: 8080

pre_task_path: ../pre_task.yml
post_task_path: ../post_task.yml

install_mailhog: false
mailhog_expose_port:

custom_drupal_settings: |
  if (file_exists($app_root . '/' . $site_path . '/settings.local.php')) {
    include $app_root . '/' . $site_path . '/settings.local.php';
  }
